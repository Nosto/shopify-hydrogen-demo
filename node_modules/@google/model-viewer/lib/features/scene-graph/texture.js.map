{"version":3,"file":"texture.js","sourceRoot":"","sources":["../../../src/features/scene-graph/texture.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAKH,OAAO,EAAC,KAAK,EAAC,MAAM,YAAY,CAAC;AACjC,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC;AACrC,OAAO,EAAC,kBAAkB,EAAE,eAAe,EAAC,MAAM,wBAAwB,CAAC;AAI3E,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AAC/B,MAAM,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;AACnC,MAAM,aAAa,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AAE7C;;GAEG;AACH,MAAM,OAAO,OAAQ,SAAQ,eAAe;IAI1C,IAAW,CAAC,aAAa,CAAC;;QACxB,OAAO,MAAA,IAAI,CAAC,kBAAkB,CAAC,0CAAE,MAAM,GAAG,IAAI,GAAG,KAAqB,CAAC;IACzE,CAAC;IAED,YAAY,QAAoB,EAAE,YAA0B;QAC1D,KAAK,CAAC,QAAQ,EAAE,IAAI,GAAG,CAAe,YAAY,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAE3E,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,OAAO,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;QACrD,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;IACnD,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;IACxC,CAAC;IAED,IAAI,IAAI,CAAC,IAAY;QACnB,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,kBAAkB,CAAsB,EAAE,CAAC;YACpE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACtB,CAAC;IACH,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxB,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC;IACtB,CAAC;CACF","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Texture as ThreeTexture} from 'three';\n\nimport {Texture as TextureInterface} from './api.js';\nimport {Image} from './image.js';\nimport {Sampler} from './sampler.js';\nimport {$correlatedObjects, ThreeDOMElement} from './three-dom-element.js';\n\n\n\nconst $image = Symbol('image');\nconst $sampler = Symbol('sampler');\nconst $threeTexture = Symbol('threeTexture');\n\n/**\n * Material facade implementation for Three.js materials\n */\nexport class Texture extends ThreeDOMElement implements TextureInterface {\n  private[$image]: Image;\n  private[$sampler]: Sampler;\n\n  private get[$threeTexture]() {\n    return this[$correlatedObjects]?.values().next().value as ThreeTexture;\n  }\n\n  constructor(onUpdate: () => void, threeTexture: ThreeTexture) {\n    super(onUpdate, new Set<ThreeTexture>(threeTexture ? [threeTexture] : []));\n\n    this[$sampler] = new Sampler(onUpdate, threeTexture);\n    this[$image] = new Image(onUpdate, threeTexture);\n  }\n\n  get name(): string {\n    return this[$threeTexture].name || '';\n  }\n\n  set name(name: string) {\n    for (const texture of this[$correlatedObjects] as Set<ThreeTexture>) {\n      texture.name = name;\n    }\n  }\n\n  get sampler(): Sampler {\n    return this[$sampler];\n  }\n\n  get source(): Image {\n    return this[$image];\n  }\n}\n"]}