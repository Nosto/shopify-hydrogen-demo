{"version":3,"file":"three-dom-element.js","sourceRoot":"","sources":["../../../src/features/scene-graph/three-dom-element.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;GAaG;AAIH,MAAM,CAAC,MAAM,kBAAkB,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC;AAC9D,MAAM,CAAC,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;AAI5C;;;;;GAKG;AACH,MAAM,OAAO,eAAe;IAK1B,YAAY,QAAoB,EAAE,iBAAoC;QACpE,IAAI,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC;QAC3B,IAAI,CAAC,kBAAkB,CAAC,GAAG,iBAAiB,CAAC;IAC/C,CAAC;CACF","sourcesContent":["/* @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {Material, Object3D, Texture} from 'three';\n\nexport const $correlatedObjects = Symbol('correlatedObjects');\nexport const $onUpdate = Symbol('onUpdate');\n\ntype CorrelatedObjects = Set<Object3D>|Set<Material>|Set<Texture>;\n\n/**\n * A SerializableThreeDOMElement is the common primitive of all scene graph\n * elements that have been facaded in the host execution context. It adds\n * a common interface to these elements in support of convenient\n * serializability.\n */\nexport class ThreeDOMElement {\n  readonly[$onUpdate]: () => void;\n  // The Three.js scene graph construct for this element.\n  [$correlatedObjects]: CorrelatedObjects;\n\n  constructor(onUpdate: () => void, correlatedObjects: CorrelatedObjects) {\n    this[$onUpdate] = onUpdate;\n    this[$correlatedObjects] = correlatedObjects;\n  }\n}\n"]}