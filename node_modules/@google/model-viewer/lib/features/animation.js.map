{"version":3,"file":"animation.js","sourceRoot":"","sources":["../../src/features/animation.ts"],"names":[],"mappings":"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","sourcesContent":["/* @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the 'License');\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an 'AS IS' BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {property} from 'lit/decorators.js';\nimport {LoopOnce, LoopPingPong, LoopRepeat} from 'three';\n\nimport ModelViewerElementBase, {$getModelIsVisible, $needsRender, $onModelLoad, $renderer, $scene, $tick} from '../model-viewer-base.js';\nimport {Constructor} from '../utilities.js';\n\nconst MILLISECONDS_PER_SECOND = 1000.0\n\nconst $changeAnimation = Symbol('changeAnimation');\nconst $appendAnimation = Symbol('appendAnimation');\nconst $detachAnimation = Symbol('detachAnimation');\nconst $paused = Symbol('paused');\n\ninterface PlayAnimationOptions {\n  repetitions: number, pingpong: boolean,\n}\n\ninterface AppendAnimationOptions {\n  pingpong: boolean, repetitions: number|null, weight: number,\n      timeScale: number, fade: boolean|number, warp: boolean|number,\n      relativeWarp: boolean, time: number|null\n}\n\ninterface DetachAnimationOptions {\n  fade: boolean|number\n}\n\nconst DEFAULT_PLAY_OPTIONS: PlayAnimationOptions = {\n  repetitions: Infinity,\n  pingpong: false\n};\n\nconst DEFAULT_APPEND_OPTIONS: AppendAnimationOptions = {\n  pingpong: false,\n  repetitions: null,\n  weight: 1,\n  timeScale: 1,\n  fade: false,\n  warp: false,\n  relativeWarp: true,\n  time: null\n};\n\nconst DEFAULT_DETACH_OPTIONS: DetachAnimationOptions = {\n  fade: true\n};\n\nexport declare interface AnimationInterface {\n  autoplay: boolean;\n  animationName: string|void;\n  animationCrossfadeDuration: number;\n  readonly availableAnimations: Array<string>;\n  readonly paused: boolean;\n  readonly duration: number;\n  currentTime: number;\n  timeScale: number;\n  pause(): void;\n  play(options?: PlayAnimationOptions): void;\n  appendAnimation(animationName: string, options?: AppendAnimationOptions):\n      void;\n  detachAnimation(animationName: string, options?: DetachAnimationOptions):\n      void;\n}\n\nexport const AnimationMixin = <T extends Constructor<ModelViewerElementBase>>(\n    ModelViewerElement: T): Constructor<AnimationInterface>&T => {\n  class AnimationModelViewerElement extends ModelViewerElement {\n    @property({type: Boolean}) autoplay: boolean = false;\n    @property({type: String, attribute: 'animation-name'})\n    animationName: string|undefined = undefined;\n    @property({type: Number, attribute: 'animation-crossfade-duration'})\n    animationCrossfadeDuration: number = 300;\n\n    protected[$paused]: boolean = true;\n\n    constructor(...args: any[]) {\n      super(args);\n\n      this[$scene].subscribeMixerEvent('loop', (e) => {\n        const count = e.action._loopCount;\n        const name = e.action._clip.name;\n        const uuid = e.action._clip.uuid;\n        const targetAnimation =\n            this[$scene].markedAnimations.find(e => e.name === name);\n\n        if (targetAnimation) {\n          this[$scene].updateAnimationLoop(\n              targetAnimation.name,\n              targetAnimation.loopMode,\n              targetAnimation.repetitionCount);\n          const filtredArr =\n              this[$scene].markedAnimations.filter(e => e.name !== name);\n          this[$scene].markedAnimations = filtredArr;\n        }\n\n        this.dispatchEvent(\n            new CustomEvent('loop', {detail: {count, name, uuid}}));\n      });\n      this[$scene].subscribeMixerEvent('finished', (e) => {\n        if (!this[$scene].appendedAnimations.includes(e.action._clip.name)) {\n          this[$paused] = true;\n        } else {\n          const filterdList = this[$scene].appendedAnimations.filter(\n              i => i !== e.action._clip.name);\n          this[$scene].appendedAnimations = filterdList;\n        }\n        this.dispatchEvent(new CustomEvent('finished'));\n      });\n    }\n\n    /**\n     * Returns an array\n     */\n    get availableAnimations(): Array<string> {\n      if (this.loaded) {\n        return this[$scene].animationNames;\n      }\n\n      return [];\n    }\n\n    get duration(): number {\n      return this[$scene].duration;\n    }\n\n    get paused(): boolean {\n      return this[$paused];\n    }\n\n    get currentTime(): number {\n      return this[$scene].animationTime;\n    }\n\n    get appendedAnimations(): string[] {\n      return this[$scene].appendedAnimations;\n    }\n\n    set currentTime(value: number) {\n      this[$scene].animationTime = value;\n      this[$needsRender]();\n    }\n\n    get timeScale(): number {\n      return this[$scene].animationTimeScale;\n    }\n\n    set timeScale(value: number) {\n      this[$scene].animationTimeScale = value;\n    }\n\n    pause() {\n      if (this[$paused]) {\n        return;\n      }\n\n      this[$paused] = true;\n      this.dispatchEvent(new CustomEvent('pause'));\n    }\n\n    play(options?: PlayAnimationOptions) {\n      if (this.availableAnimations.length > 0) {\n        this[$paused] = false;\n\n        this[$changeAnimation](options);\n\n        this.dispatchEvent(new CustomEvent('play'));\n      }\n    }\n\n    appendAnimation(animationName: string, options?: AppendAnimationOptions) {\n      if (this.availableAnimations.length > 0) {\n        this[$paused] = false;\n\n        this[$appendAnimation](animationName, options);\n\n        this.dispatchEvent(new CustomEvent('append-animation'));\n      }\n    }\n\n    detachAnimation(animationName: string, options?: DetachAnimationOptions) {\n      if (this.availableAnimations.length > 0) {\n        this[$paused] = false;\n\n        this[$detachAnimation](animationName, options);\n\n        this.dispatchEvent(new CustomEvent('detach-animation'));\n      }\n    }\n\n    [$onModelLoad]() {\n      super[$onModelLoad]();\n\n      this[$paused] = true;\n\n      if (this.animationName != null) {\n        this[$changeAnimation]();\n      }\n\n      if (this.autoplay) {\n        this.play();\n      }\n    }\n\n    [$tick](_time: number, delta: number) {\n      super[$tick](_time, delta);\n\n      if (this[$paused] ||\n          (!this[$getModelIsVisible]() && !this[$renderer].isPresenting)) {\n        return;\n      }\n\n      this[$scene].updateAnimation(delta / MILLISECONDS_PER_SECOND);\n\n      this[$needsRender]();\n    }\n\n    updated(changedProperties: Map<string, any>) {\n      super.updated(changedProperties);\n\n      if (changedProperties.has('autoplay') && this.autoplay) {\n        this.play();\n      }\n\n      if (changedProperties.has('animationName')) {\n        this[$changeAnimation]();\n      }\n    }\n\n    [$changeAnimation](options: PlayAnimationOptions = DEFAULT_PLAY_OPTIONS) {\n      const repetitions = options.repetitions ?? Infinity;\n      const mode = options.pingpong ?\n          LoopPingPong :\n          (repetitions === 1 ? LoopOnce : LoopRepeat);\n      this[$scene].playAnimation(\n          this.animationName,\n          this.animationCrossfadeDuration / MILLISECONDS_PER_SECOND,\n          mode,\n          repetitions);\n\n      // If we are currently paused, we need to force a render so that\n      // the scene updates to the first frame of the new animation\n      if (this[$paused]) {\n        this[$scene].updateAnimation(0);\n        this[$needsRender]();\n      }\n    }\n\n    [$appendAnimation](\n        animationName: string = '',\n        options: AppendAnimationOptions = DEFAULT_APPEND_OPTIONS) {\n      const repetitions = options.repetitions ?? Infinity;\n      const mode = options.pingpong ?\n          LoopPingPong :\n          (repetitions === 1 ? LoopOnce : LoopRepeat);\n\n      const needsToStop = !!options.repetitions || 'pingpong' in options;\n\n      this[$scene].appendAnimation(\n          animationName ? animationName : this.animationName,\n          mode,\n          repetitions,\n          options.weight,\n          options.timeScale,\n          options.fade,\n          options.warp,\n          options.relativeWarp,\n          options.time,\n          needsToStop);\n\n      // If we are currently paused, we need to force a render so that\n      // the scene updates to the first frame of the new animation\n      if (this[$paused]) {\n        this[$scene].updateAnimation(0);\n        this[$needsRender]();\n      }\n    }\n\n    [$detachAnimation](\n        animationName: string = '',\n        options: DetachAnimationOptions = DEFAULT_DETACH_OPTIONS) {\n      this[$scene].detachAnimation(\n          animationName ? animationName : this.animationName, options.fade);\n\n      // If we are currently paused, we need to force a render so that\n      // the scene updates to the first frame of the new animation\n      if (this[$paused]) {\n        this[$scene].updateAnimation(0);\n        this[$needsRender]();\n      }\n    }\n  }\n\n  return AnimationModelViewerElement;\n};\n"]}