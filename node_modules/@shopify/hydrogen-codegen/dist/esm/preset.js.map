{"version":3,"sources":["../../src/preset.ts"],"names":[],"mappings":"AACA;AAAA,EACE,UAAU;AAAA,OAEL;AACP,SAAQ,yBAAwB;AAIzB,MAAM,SAA2C;AAAA,EACtD,CAAC,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,EACtB,uBAAuB,CAAC,YAAY;AAClC,QAAI;AACF,YAAM,iBAAiB,kBAAkB,QAAQ,aAAa;AAE9D,aAAO,eAAe,sBAAsB;AAAA,QAC1C,GAAG;AAAA,QACH,cAAc;AAAA,UACZ,aAAa;AAAA,YACX,WAAW,eAAe;AAAA,YAC1B,MAAM,eAAe;AAAA,UACvB;AAAA,UACA,oBAAoB,eAAe;AAAA,UACnC,GAAG,QAAQ;AAAA,QACb;AAAA,MACF,CAAC;AAAA,IACH,SAAS,KAAK;AACZ,YAAM,QAAQ;AAEd,YAAM,UAAU,MAAM,QAAQ;AAAA,QAC5B;AAAA,QACA;AAAA,MACF;AAEA,YAAM;AAAA,IACR;AAAA,EACF;AACF","sourcesContent":["import type {Types} from '@graphql-codegen/plugin-helpers';\nimport {\n  preset as internalPreset,\n  type PresetConfig as InternalPresetConfig,\n} from '@shopify/graphql-codegen';\nimport {getDefaultOptions} from './defaults.js';\n\nexport type PresetConfig = Partial<InternalPresetConfig>;\n\nexport const preset: Types.OutputPreset<PresetConfig> = {\n  [Symbol.for('name')]: 'hydrogen',\n  buildGeneratesSection: (options) => {\n    try {\n      const defaultOptions = getDefaultOptions(options.baseOutputDir);\n\n      return internalPreset.buildGeneratesSection({\n        ...options,\n        presetConfig: {\n          importTypes: {\n            namespace: defaultOptions.namespacedImportName,\n            from: defaultOptions.importTypesFrom,\n          },\n          interfaceExtension: defaultOptions.interfaceExtensionCode,\n          ...options.presetConfig,\n        } satisfies PresetConfig,\n      });\n    } catch (err) {\n      const error = err as Error;\n\n      error.message = error.message.replace(\n        '[@shopify/graphql-codegen]',\n        '[hydrogen-preset]',\n      );\n\n      throw error;\n    }\n  },\n};\n"]}