import { Readable } from "node:stream";
import { sendResponse } from "@mjackson/node-fetch-server";
import { Request } from "../worker/index.js";
function toURL(req = "/", origin) {
  const isRequest = typeof req !== "string";
  let pathname = (isRequest ? req.url : req) || "/";
  return new URL(
    (origin || isRequest && req.headers.host && `http://${req.headers.host}` || "http://example.com") + pathname
  );
}
function toWeb(req, headers) {
  if (!req.headers.host) {
    throw new Error("Request must contain a host header.");
  }
  return new Request(toURL(req), {
    method: req.method,
    headers: { ...headers, ...req.headers },
    body: req.headers["content-length"] ? Readable.toWeb(req) : void 0,
    duplex: "half",
    // This is required when sending a ReadableStream as body
    redirect: "manual"
    // Avoid consuming 300 responses here, return to browser
  });
}
function pipeFromWeb(webResponse, res) {
  return sendResponse(res, webResponse);
}
export {
  pipeFromWeb,
  toURL,
  toWeb
};
